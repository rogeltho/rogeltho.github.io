{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/item-tabs/item-tabs.component.ts","./src/app/item-tabs/item-tabs.component.html","./src/app/services/file.service.ts","./src/app/inputs/inputs.component.ts","./src/app/inputs/inputs.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  formData: any;\n\n  handleSubmit(data: any) {\n    this.formData = data;\n  }\n}\n","<header>\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"logo\">Disway</a>\n  </div>\n</header>\n\n<main class=\"main-content\">\n  <app-inputs (formSubmitted)=\"handleSubmit($event)\"></app-inputs>\n  <app-item-tabs [formDataProp]=\"formData\"></app-item-tabs>\n</main>\n\n\n\n<div class=\"container\">\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\n\nimport { InputsComponent } from './inputs/inputs.component';\nimport { ItemTabsComponent } from './item-tabs/item-tabs.component';\n\n@NgModule({\n  declarations: [AppComponent, InputsComponent, ItemTabsComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    InputTextModule,\n    ButtonModule,\n    TabViewModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToastModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { FileService } from './../services/file.service';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-item-tabs',\n  templateUrl: './item-tabs.component.html',\n  styleUrls: ['./item-tabs.component.scss'],\n  providers: [MessageService]\n})\nexport class ItemTabsComponent implements OnInit, OnChanges {\n  @Input() formDataProp: { product: string; brand: string };\n\n  cnetContent;\n  cnetLoadedContent;\n  iceCatContent;\n  iceCatLoadedContent;\n\n  constructor(\n    private fileService: FileService,\n    public sanitizer: DomSanitizer,\n    private messageService: MessageService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    debugger;\n    if (changes.formDataProp) {\n      if (changes.formDataProp.currentValue) {\n        this.fileService\n          .getFiles(this.formDataProp)\n          .subscribe(({ cnet, icecat }) => {\n            this.cnetLoadedContent = cnet;\n            this.iceCatLoadedContent = icecat;\n            this.cnetContent = this.sanitizer.bypassSecurityTrustHtml(cnet);\n            this.iceCatContent = this.sanitizer.bypassSecurityTrustHtml(icecat);\n          });\n      }\n    }\n  }\n\n  async handleChange(event) {\n    if (event.index === 0) {\n      try {\n        await navigator.clipboard.writeText(this.cnetLoadedContent);\n        this.showSuccess();\n        console.log('Clipboarded');\n      } catch (error) {}\n    } else {\n      try {\n        navigator.clipboard.writeText(this.iceCatLoadedContent);\n        this.showSuccess();\n        console.log('Clipboarded');\n      } catch (error) {}\n    }\n  }\n\n  showSuccess() {\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: 'Contenu Bien Copie',\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<p-toast></p-toast>\n\n<p-tabView (onChange)=\"handleChange($event)\">\n  <p-tabPanel header=\"Cnet\">\n    <!-- <p>{{this.cnetContent}}</p> -->\n    <iframe [srcdoc]=\"this.cnetContent\" title=\"description\"></iframe>\n\n  </p-tabPanel>\n  <p-tabPanel header=\"IceCat\">\n    <!-- <p>{{this.iceCatContent}}</p> -->\n    <iframe [srcdoc]=\"this.iceCatContent\" title=\"description\"></iframe>\n  </p-tabPanel>\n</p-tabView>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileService {\n  constructor(private http: HttpClient) {}\n\n  getFiles({\n    product,\n    brand,\n  }: {\n    product: string;\n    brand: string;\n  }): Observable<{ cnet: string; icecat: string }> {\n    return this.http.post<{ cnet: string; icecat: string }>(\n      'https://Backendgetitems.rogeltho.repl.co',\n      {\n        product,\n        brand,\n      }\n    );\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.scss'],\n})\nexport class InputsComponent implements OnInit {\n  @Output() formSubmitted = new EventEmitter<any>();\n\n  myForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {}\n\n  emitSubmitEvent() {\n    this.formSubmitted.emit(this.myForm.value);\n\n  }\n\n  createForm() {\n    this.myForm = this.fb.group({\n      product: this.fb.control(''),\n      brand: this.fb.control(''),\n    });\n  }\n}\n","<div class=\"playcontainer\" [formGroup]=\"myForm\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-4\">\n      <span class=\"p-float-label\">\n        <input formControlName=\"product\"  type=\"text\" pInputText class=\"p-inputtext-sm\">\n        <label for=\"float-input\">Product Code</label>\n      </span>\n    </div>\n    <div class=\"p-col-4 p-offset-1\">\n      <span class=\"p-float-label\">\n        <input formControlName=\"brand\"  type=\"text\" pInputText class=\"p-inputtext-sm\">\n        <label for=\"float-input\">Brand</label>\n      </span>\n    </div>\n    <div class=\"p-col-2 p-offset-1\">\n      <button (click)=\"emitSubmitEvent()\" pButton type=\"button\" label=\"Submit\" icon=\"pi pi-check\" class=\"p-button-sm\"></button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}